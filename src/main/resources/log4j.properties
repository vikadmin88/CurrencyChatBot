
# Root logger option
#(pore) error warn info debug, trace (rich)
log4j.rootLogger=info, stdout, file
# examples:
# LOGGER.trace("Method 1 started with argument={}", update.getMessage().getText());
# LOGGER.debug("Database updated with script = {}", update.getMessage().getText());
# LOGGER.info("Application has started on port = {}", update.getMessage().getText());
# LOGGER.warn("Log4j didn't find log4j.properties. Please, provide them");
# LOGGER.error("Connection refused to host = {}", update.getMessage().getText());

# Redirect log messages to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# Redirect log messages to a log file, support file rolling.
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=./cchat-bot.log
log4j.appender.file.MaxFileSize=5MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
